find_package(Threads REQUIRED)
compile_as_cuda(benchmark.cpp)
add_executable(benchmark benchmark.cpp)
target_link_libraries(benchmark PRIVATE cartex)
target_link_libraries(benchmark PRIVATE thread_pool)
target_link_libraries(benchmark PRIVATE options)
target_link_libraries(benchmark PRIVATE device)
target_link_libraries(benchmark PRIVATE decomposition)
target_link_libraries(benchmark PRIVATE runtime)
target_link_libraries(benchmark PRIVATE HWCART::hwcart)
target_link_libraries(benchmark PRIVATE MPI::MPI_CXX)
target_link_libraries(benchmark PRIVATE Threads::Threads)
target_compile_definitions(benchmark PRIVATE CARTEX_RUNTIME=${CARTEX_RUNTIME})
